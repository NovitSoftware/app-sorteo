{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/aviso-snack/aviso-snack.component.ts","./src/app/components/aviso-snack/aviso-snack.component.html","./src/app/components/aviso-snack/aviso-snack.service.ts","./src/app/components/head-bar/head-bar.component.ts","./src/app/components/head-bar/head-bar.component.html","./src/app/components/resultados/resultados.component.ts","./src/app/components/resultados/resultados.component.html","./src/app/components/version2023/carga-listado/carga-listado.component.ts","./src/app/components/version2023/carga-listado/carga-listado.component.html","./src/app/components/version2023/slots-sorteo2023/slots-sorteo2023.component.ts","./src/app/components/version2023/slots-sorteo2023/slots-sorteo2023.component.html","./src/app/components/version2023/version2023.component.ts","./src/app/components/version2023/version2023.component.html","./src/app/svg.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\r\nimport { SvgService } from './svg.service';\r\nimport { HeadBarComponent } from './components/head-bar/head-bar.component';\r\nimport { Version2023Component } from './components/version2023/version2023.component';\r\n\r\nexport enum Version {\r\n  _2023\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  showVersionControl: boolean = false;\r\n  displayVersion: Version = Version._2023;\r\n  version = Version;\r\n\r\n  status = {\r\n    start: false,\r\n    finish: false\r\n  }\r\n\r\n  @ViewChild('headBar') headBar!: HeadBarComponent;\r\n  @ViewChild('version2023') version2023!: Version2023Component;\r\n\r\n  constructor(private svgService: SvgService) {\r\n    this.svgService.init();\r\n  }\r\n\r\n  resetearSorteo() {\r\n    switch (this.displayVersion) {\r\n      case Version._2023:\r\n        this.version2023.resetearSorteo();\r\n        break;\r\n    }\r\n  }\r\n\r\n  changeVersionDisplaying(version: Version) {\r\n    this.headBar.resetearSorteo(true);\r\n    this.displayVersion = version;\r\n  }\r\n}","<div id=\"app\">\r\n  <app-head-bar #headBar [displayVersion]=\"displayVersion\" [status]=\"status\" (fireResetearSorteo)=\"resetearSorteo()\"></app-head-bar>\r\n\r\n  @if (showVersionControl) {\r\n    <mat-button-toggle-group #toggleGroup=\"matButtonToggleGroup\" id=\"toggleVersion\" [value]=\"displayVersion\" (change)=\"changeVersionDisplaying(toggleGroup.value)\">\r\n      <mat-button-toggle [value]=\"version._2023\">2023</mat-button-toggle>\r\n    </mat-button-toggle-group>\r\n  }\r\n\r\n  <div id=\"appBody\">\r\n      <app-version2023 class=\"fullWidth fullHeight centerContainer\" #version2023 [status]=\"status\"></app-version2023>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { SvgService } from './svg.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n// MATERIAL ANGULAR\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n// COMPONENTES\r\nimport { AppComponent } from './app.component';\r\nimport { ResultadosComponent } from './components/resultados/resultados.component';\r\nimport { HeadBarComponent } from './components/head-bar/head-bar.component';\r\nimport { Version2023Component } from './components/version2023/version2023.component';\r\nimport { CargaListadoComponent } from './components/version2023/carga-listado/carga-listado.component';\r\nimport { SlotsSorteo2023Component } from './components/version2023/slots-sorteo2023/slots-sorteo2023.component';\r\nimport { AvisoSnackComponent } from './components/aviso-snack/aviso-snack.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ResultadosComponent,\r\n    HeadBarComponent,\r\n    Version2023Component,\r\n    CargaListadoComponent,\r\n    AvisoSnackComponent,\r\n    SlotsSorteo2023Component\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatButtonToggleModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule\r\n  ],\r\n  providers: [SvgService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA, MatSnackBarRef } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-aviso-snack',\r\n  templateUrl: './aviso-snack.component.html',\r\n  styleUrls: ['./aviso-snack.component.scss']\r\n})\r\nexport class AvisoSnackComponent implements OnInit {\r\n\r\n  constructor(\r\n    public snackBarRef: MatSnackBarRef<AvisoSnackComponent>,\r\n    @Inject(MAT_SNACK_BAR_DATA) public data: any\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  dismiss(){\r\n    this.snackBarRef.dismiss();\r\n  }\r\n\r\n}\r\n","<div id=\"container\" [class]=\"data.type\" (click)=\"dismiss()\">\r\n    <span class=\"title\">{{data.title}}</span>\r\n    <span class=\"text\">{{data.text}}</span>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { AvisoSnackComponent } from \"./aviso-snack.component\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AvisoSnackService {\r\n\r\n    constructor(private _snackBar: MatSnackBar){}\r\n\r\n    displayMsg(type: \"error\"|\"exito\", title: string, text: string){\r\n        this._snackBar.openFromComponent(AvisoSnackComponent, {\r\n            horizontalPosition: 'right',\r\n            verticalPosition: 'top',\r\n            data: {\r\n                type: type,\r\n                title: title,\r\n                text: text\r\n            }\r\n        });\r\n    }\r\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Version } from 'src/app/app.component';\r\n\r\n@Component({\r\n  selector: 'app-head-bar',\r\n  templateUrl: './head-bar.component.html',\r\n  styleUrls: ['./head-bar.component.scss']\r\n})\r\nexport class HeadBarComponent implements OnInit {\r\n  @Input() displayVersion!: Version;\r\n  @Input() status!: { start: boolean, finish: boolean };\r\n\r\n  @Output() fireResetearSorteo = new EventEmitter();\r\n  currentYear: number;\r\n\r\n  constructor() {\r\n    this.currentYear = new Date().getFullYear();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  resetearSorteo(force: boolean = false) {\r\n    if (this.status.finish || force) {\r\n      this.status.finish = false;\r\n      this.status.start = false;\r\n\r\n      this.fireResetearSorteo.emit();\r\n    }\r\n  }\r\n\r\n  getVersion() {\r\n    return \"2023\";\r\n  }\r\n}\r\n","<div id=\"headBar\">\r\n    <h1 class=\"sorteo\" (click)=\"resetearSorteo()\" [ngClass]=\"{'clickable': status.finish }\">Sorteo {{currentYear}}</h1>\r\n    <div style=\"display: flex; align-items: center;\">\r\n        <div id=\"iconGroup\">\r\n            <!-- <mat-icon class=\"svgIcon\" svgIcon=\"novitLogoBlanco\"></mat-icon> -->\r\n        </div>\r\n        <!-- <span class=\"separator\"></span>\r\n        <img src=\"assets/asset-img.png\" style=\"height: 50px;\"> -->\r\n    </div>\r\n</div>\r\n","import { Component, ViewChild, ElementRef, Input, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\r\nimport confetti from 'canvas-confetti';\r\n\r\n\r\n@Component({\r\n  selector: 'app-resultados',\r\n  templateUrl: './resultados.component.html',\r\n  styleUrls: ['./resultados.component.scss'],\r\n  animations: [\r\n    trigger('zoomInOut', [\r\n      transition(':enter', [\r\n        animate('1s ease-in-out', keyframes([\r\n          style({ transform: 'scale(0.5)', offset: 0 }),\r\n          style({ transform: 'scale(1.2)', offset: 0.5 }),\r\n          style({ transform: 'scale(1)', offset: 1 })\r\n        ]))\r\n      ])\r\n    ]),\r\n    trigger('fadeIn', [\r\n      transition(':enter', [\r\n        style({ opacity: 0, transform: 'translateY(10px)' }),\r\n        animate('500ms ease-out', style({ opacity: 1, transform: 'translateY(0)' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class ResultadosComponent implements OnInit {\r\n  @Input() results!: { texto: number | string; premio: string }[];\r\n  @Input() columnaDerecha!: string;\r\n  @Input() empresa!: string;\r\n  @Input() classEmpresa: string = '';\r\n  @Input() sgvIconEmpresa: string = '';\r\n\r\n  @ViewChild('resultadosContainer') resultadosContainer!: ElementRef;\r\n  visibleResults: any[] = [];\r\n\r\n  constructor(private cdr: ChangeDetectorRef) { }\r\n\r\n  private scrollToBottom(): void {\r\n    setTimeout(() => {\r\n      const appContainer = document.querySelector('#app') as HTMLElement;\r\n      const scrollContainer = appContainer || this.resultadosContainer.nativeElement;\r\n      scrollContainer.scrollTop = scrollContainer.scrollHeight;\r\n\r\n      // if (this.resultadosContainer) {\r\n      //   const nativeElement = this.resultadosContainer.nativeElement;\r\n      //   if (nativeElement.scrollHeight > nativeElement.clientHeight) {\r\n      //     nativeElement.scrollTop = nativeElement.scrollHeight;\r\n      //   }\r\n      // }\r\n    }, 0);\r\n  }\r\n\r\n  async showResults(): Promise<void> {\r\n    for (let i = 0; i < this.results.length; i++) {\r\n      this.visibleResults.push(this.results[i]); // Agrega el resultado a la lista visible\r\n      this.cdr.detectChanges(); // Asegura que el DOM esté actualizado\r\n      this.scrollToBottom(); // Realiza el scroll al final\r\n\r\n      if (i < this.results.length - 1) //no espera si es el ultimo\r\n        await new Promise(resolve => setTimeout(resolve, 5000)); // Espera unos segundos\r\n    }\r\n    await new Promise(resolve => setTimeout(resolve, 1000)); // Espera un segundo\r\n    this.showConfetti();\r\n    this.animateWinners();\r\n  }\r\n\r\n  private showConfetti(): void {\r\n    confetti({\r\n      particleCount: 500,\r\n      spread: 90,\r\n      origin: { y: 0.6 }\r\n    });\r\n  }\r\n\r\n  private animateWinners(): void {\r\n    const elements = document.querySelectorAll('.winner');\r\n    elements.forEach(element => {\r\n      element.classList.add('dance');\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showResults();\r\n  }\r\n}\r\n","<div id=\"resultados\" [ngClass]=\"{'noMargin version2023': columnaDerecha === 'Participante'}\" #resultadosContainer>\r\n  <div class=\"empresaTittle\">\r\n    <br>\r\n    <mat-icon class=\"{{classEmpresa}}\" svgIcon=\"{{sgvIconEmpresa}}\">\r\n    </mat-icon>\r\n  </div>\r\n  <div class=\"resultadoContainer cabeceraTabla\">\r\n    <span>Premio</span>\r\n    <span>{{columnaDerecha}}</span>\r\n  </div>\r\n  @for (result of visibleResults; track result) {\r\n    <div [@zoomInOut] class=\"resultadoContainer itemsTabla\">\r\n      <span>{{result.premio}}</span>\r\n      <div class=\"winner\">{{result.texto}}</div>\r\n    </div>\r\n  }\r\n</div>\r\n","import { ChangeDetectorRef, Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { AvisoSnackService } from '../../aviso-snack/aviso-snack.service';\r\nimport { Premio } from '../slots-sorteo2023/slots-sorteo2023.component';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-carga-listado',\r\n  templateUrl: './carga-listado.component.html',\r\n  styleUrls: ['./carga-listado.component.scss']\r\n})\r\nexport class CargaListadoComponent implements OnInit {\r\n\r\n    participantesOriginal: string[] = [];\r\n    participantes: string[] = [];\r\n    premios: Premio[] = [];\r\n    cantidadTotalPremios: number = 0;\r\n\r\n    @Output() fireStartSorteo = new EventEmitter();\r\n\r\n    constructor(\r\n        private _avisoSnackService: AvisoSnackService,\r\n        private cdr: ChangeDetectorRef\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n    \r\n    resetearSorteo(){\r\n        this.participantes = [...this.participantesOriginal];\r\n    }\r\n\r\n    cargarArchivo(event: any, tipo: 'participantes'|'premios'){\r\n        if (event.target.files.length > 0) {\r\n            const file = event.target.files[0];\r\n            event.target.value = '';\r\n            \r\n            if (file.type === \"text/plain\") {\r\n                let fileReader: FileReader = new FileReader();\r\n                let output: string[] = [];\r\n\r\n                let self = this;\r\n                fileReader.onload = function(e: any) {\r\n                    let lines = e.target.result.split(/[\\r\\n]+/g); // linebreaks\r\n\r\n                    for(var i = 0; i < lines.length; i++) {\r\n                        output.push(lines[i].toString().trim());\r\n                    }\r\n\r\n                    if (tipo === 'participantes') self.cargarParticipantes(output)\r\n                    else self.cargarPremios(output);\r\n\r\n                };\r\n                fileReader.readAsText(file);        \r\n            }\r\n        }\r\n    }\r\n\r\n    cargarParticipantes(output: any){\r\n        let lowerCase = _.map(output, x => x.toLowerCase());\r\n        this.participantesOriginal = output.filter((value: string, index: number) => {\r\n            return lowerCase.indexOf(value.toLowerCase()) === index && value.trim() !== \"\";\r\n        });\r\n        this.participantes = [...this.participantesOriginal];\r\n    }\r\n\r\n    cargarPremios(output: any){\r\n        let premios: any[] = [];\r\n        let error: string = \"\";\r\n        this.cantidadTotalPremios = 0;\r\n\r\n        output.forEach((x: string) => {\r\n            if (!error){\r\n                let pair = x.split(\",\");\r\n                \r\n                error = this.validarPremios(pair);\r\n\r\n                if (error !== \"\"){\r\n                    this._avisoSnackService.displayMsg(\"error\", \"FORMATO INCORRECTO\", error);\r\n                    premios = [];\r\n                } else {\r\n                    let nombre = pair[0].trim();\r\n                    let cantidad = parseInt(pair[1].trim())\r\n                    premios.push({nombre: nombre, cantidad: cantidad})\r\n                    this.cantidadTotalPremios += cantidad;\r\n                }\r\n            }\r\n        })\r\n        this.premios = premios;\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    validarPremios(pair: string[]): string {\r\n        if (pair.length !== 2) return `El formato de texto de premio debe ser: \"premio,cantidad\"`\r\n\r\n        try {\r\n            let cantidad = parseInt(pair[1].trim());\r\n            if (isNaN(cantidad)) return `No se ingresó un número para indicar la cantidad de premios`\r\n            if (cantidad === 0) return `Un premio tiene cantidad cero`\r\n        } catch {\r\n            return `No se ingresó un número para indicar la cantidad de premios`\r\n        }\r\n\r\n        return \"\"\r\n    }\r\n\r\n    masPremiosQueParticipantes() {\r\n        return (this.participantes.length > 0 && this.cantidadTotalPremios > 0) && this.participantes.length < this.cantidadTotalPremios\r\n    }\r\n\r\n    isInvalid(){\r\n        return !this.participantes.length || !this.premios.length || this.masPremiosQueParticipantes()\r\n    }\r\n\r\n    getListados(){\r\n        let premios: string[] = [];\r\n        _.forEach(this.premios, x => { premios = [...premios, ...Array(x.cantidad).fill(x.nombre)]})\r\n        return {participantes: this.participantes, premios: premios}\r\n    }\r\n}","<div id=\"cargaListadosContainer\">\r\n  <input type=\"file\" style=\"display: none;\" (change)=\"cargarArchivo($event, 'participantes')\" #inputParticipantes accept=\".txt\">\r\n  <input type=\"file\" style=\"display: none;\" (change)=\"cargarArchivo($event, 'premios')\" #inputPremios accept=\".txt\">\r\n\r\n  <div id=\"listadosContainer\">\r\n    <div id=\"participantesContainer\">\r\n      <div class=\"headerContainer\">\r\n        <h3 style=\"text-decoration: underline;\">PARTICIPANTES</h3>\r\n        <div class=\"rightHeaderSection\">\r\n          <button mat-raised-button class=\"primaryBtn\" (click)=\"inputParticipantes.click()\">Cargar</button>\r\n          <mat-icon #tooltip=\"matTooltip\" matTooltip=\"El archivo .txt debe tener un participante por línea\" matTooltipPosition=\"right\">info</mat-icon>\r\n        </div>\r\n      </div>\r\n\r\n      @if (participantes.length) {\r\n        <div class=\"listadoContainer listadoScroleable\">\r\n          @for (participante of participantes; track participante) {\r\n            <div class=\"filaTabla\">\r\n              <span>{{participante}}</span>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n\r\n    <div id=\"premiosContainer\">\r\n      <div class=\"headerContainer\">\r\n        <h3 style=\"text-decoration: underline;\">PREMIOS</h3>\r\n        <div class=\"rightHeaderSection\">\r\n          <button mat-raised-button class=\"primaryBtn\" (click)=\"inputPremios.click()\">Cargar</button>\r\n          <mat-icon matTooltip='El archivo .txt debe tener un premio por línea (nombre y cantidad separados por una coma - ej: \"Monopatín,3\" )' matTooltipPosition=\"right\">info</mat-icon>\r\n        </div>\r\n      </div>\r\n\r\n      @if (masPremiosQueParticipantes()) {\r\n        <span class=\"alert\">La cantidad de premios es superior a la de participantes</span>\r\n      }\r\n\r\n      @if (premios.length) {\r\n        <div class=\"listadoContainer\">\r\n          <div class=\"cabeceraTabla\">\r\n            <span>Nombre</span>\r\n            <span>Cantidad</span>\r\n          </div>\r\n          <div class=\"cuerpoTabla\">\r\n            @for (premio of premios; track premio) {\r\n              <div class=\"filaTabla\">\r\n                <span>{{premio.nombre}}</span>\r\n                <span>{{premio.cantidad}}</span>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, Renderer2, ElementRef } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-slots-sorteo2023',\r\n  templateUrl: './slots-sorteo2023.component.html',\r\n  styleUrls: ['./slots-sorteo2023.component.scss']\r\n})\r\nexport class SlotsSorteo2023Component implements OnInit {\r\n\r\n    @Input() status!: {start: boolean, finish: boolean};\r\n\r\n    sorteos!: Sorteos;\r\n    empresaSorteando: \"wen\" = \"wen\";\r\n    indexPremio: number = 0;\r\n        \r\n    // RESULTADOS SORTEO\r\n    sorteando: boolean = false;\r\n    sorteoHasStarted: boolean = false;\r\n    showParticipante: string = \"- - - -\";\r\n    countDown: string = \"\";\r\n    winnerIndex: number = 0;\r\n    winner: any|null = null;\r\n    results: { texto: string; premio: string; empresa: string }[] = [];\r\n\r\n    // CONFIGURACION DE \"RULETA\"\r\n    config: ConfiguracionRuleta = new ConfiguracionRuleta();\r\n    \r\n    // \r\n    TESTEANDO_RULETA: boolean = false;\r\n    TESTEO_CONFIG = new UntypedFormGroup(\r\n        {\r\n            microSeg: new UntypedFormControl('50', [Validators.required]),\r\n            microSeg_agregar: new UntypedFormControl('50', [Validators.required]),\r\n            microSeg_suspenso: new UntypedFormControl('85', [Validators.required]),\r\n            repetir_N_veces: new UntypedFormControl('27', [Validators.required]),\r\n            restarRepeticiones: new UntypedFormControl('9', [Validators.required]),\r\n            restarRepeticiones_suspenso: new UntypedFormControl('3', [Validators.required]),\r\n        }\r\n    );\r\n\r\n    constructor(private renderer: Renderer2, private el: ElementRef) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    startSorteo(data: Sorteos){\r\n        this.sorteos = data;\r\n        this.setDefaultIntervalValues();\r\n        this.status.start = true;\r\n    }\r\n\r\n    disableShuffleBtn(){\r\n        // return this.sorteando || this.winner !== null\r\n        return this.sorteoHasStarted;\r\n    }\r\n\r\n    disableOkBtn(){\r\n        return this.sorteando || this.winner === null;\r\n    }\r\n\r\n    setDefaultIntervalValues() {\r\n        this.config = new ConfiguracionRuleta();\r\n        this.configureTestInterval();\r\n    }\r\n\r\n    configureTestInterval(){\r\n        if (this.TESTEANDO_RULETA){\r\n            let test = this.TESTEO_CONFIG.getRawValue();\r\n            this.config.microSeg = parseInt(test.microSeg);\r\n            this.config.microSeg_agregar = parseInt(test.microSeg_agregar);\r\n            this.config.microSeg_suspenso = parseInt(test.microSeg_suspenso);\r\n            this.config.repetir_N_veces = parseInt(test.repetir_N_veces);\r\n            this.config.restarRepeticiones = parseInt(test.restarRepeticiones);\r\n            this.config.restarRepeticiones_suspenso = parseInt(test.restarRepeticiones_suspenso);\r\n        }\r\n    }\r\n\r\n    get wenResults() {\r\n        return this.results?.filter(result => result.empresa === 'wen') || [];\r\n    }\r\n\r\n    async generateWinner(){\r\n        this.sorteoHasStarted = true;\r\n        await this.runProcess();\r\n    }\r\n\r\n    async runProcess() {\r\n        const countDownElement = this.el.nativeElement.querySelector('#randomGeneratorStrings span');\r\n    \r\n        this.countDown = \"10\"; // Inicializa el countdown\r\n        this.sorteando = true;\r\n    \r\n        // Inicia las tareas en paralelo\r\n        const intervalPromise = this.generateInterval(); // Calcula los ganadores\r\n        const countdownPromise = this.runCountdown(countDownElement); // Maneja el countdown visual\r\n    \r\n        // Esperar a que ambas tareas terminen\r\n        await Promise.all([intervalPromise, countdownPromise]);\r\n    \r\n        // Cambiar el estado del sorteo\r\n        this.status.finish = true;\r\n    \r\n        // Reiniciar estados\r\n        this.sorteando = false;\r\n        console.log('Sorteo finalizado.');\r\n    }\r\n    \r\n    \r\n    \r\n\r\n    async runCountdown(countDownElement: HTMLElement) {\r\n        for (let i = 10; i > 0; i--) {\r\n            this.countDown = i.toString(); // Actualiza el countdown visual\r\n    \r\n            this.renderer.removeClass(countDownElement, 'animate');\r\n            void countDownElement.offsetWidth; // Forzar reflujo para reiniciar la animación\r\n            this.renderer.addClass(countDownElement, 'animate');\r\n    \r\n            // Espera para que la animación del countdown se reproduzca\r\n            await new Promise((resolve) => setTimeout(resolve, 1000)); // 1 segundo por iteración\r\n        }\r\n    \r\n        console.log('Countdown completado.');\r\n    }\r\n    \r\n    async generateInterval(): Promise<void> {\r\n        const empresas = [\"wen\"] as const;\r\n    \r\n        for (const empresa of empresas) {\r\n            this.empresaSorteando = empresa;\r\n    \r\n            while (this.sorteos[this.empresaSorteando].premios.length > 0) {\r\n                const participantes = this.sorteos[this.empresaSorteando].participantes;\r\n                const premios = this.sorteos[this.empresaSorteando].premios;\r\n    \r\n                // Validación: Participantes y Premios no deben estar vacíos\r\n                if (!participantes || participantes.length === 0) {\r\n                    console.error(`No hay participantes disponibles para ${empresa}.`);\r\n                    break;\r\n                }\r\n    \r\n                if (!premios || premios.length === 0) {\r\n                    console.error(`No hay premios disponibles para ${empresa}.`);\r\n                    break;\r\n                }\r\n    \r\n                // Genera un índice aleatorio para elegir al ganador\r\n                let posibleWinnerIndex = Math.floor(Math.random() * participantes.length);\r\n    \r\n                // Evita repetir el mismo ganador consecutivamente\r\n                while (this.winnerIndex === posibleWinnerIndex && participantes.length > 1) {\r\n                    posibleWinnerIndex = Math.floor(Math.random() * participantes.length);\r\n                }\r\n    \r\n                this.winnerIndex = posibleWinnerIndex;\r\n                this.showParticipante = participantes[this.winnerIndex];\r\n                console.log(`Seleccionado en ${empresa}: ${this.showParticipante}`);\r\n    \r\n                // Establece al ganador y guarda el resultado\r\n                this.setWinner();\r\n                this.saveResult();\r\n    \r\n                // Pausa breve para liberar el hilo y permitir actualizaciones de renderizado\r\n                await new Promise((resolve) => setTimeout(resolve, 0));\r\n            }\r\n    \r\n            console.log(`Finalizado el sorteo para ${empresa}.`);\r\n        }\r\n    \r\n        console.log('Sorteo completado para todas las empresas.');\r\n    }\r\n\r\n    setWinner() {\r\n        const premios = this.sorteos[this.empresaSorteando].premios;\r\n    \r\n        if (premios.length === 0) {\r\n            console.error(`No hay premios disponibles para ${this.empresaSorteando}`);\r\n            return;\r\n        }\r\n    \r\n        this.winner = {\r\n            texto: this.showParticipante,\r\n            premio: premios[this.indexPremio], // Asignar premio correctamente\r\n            empresa: this.empresaSorteando\r\n        };\r\n    }\r\n    \r\n    \r\n    saveResult() {\r\n        if (!this.winner) {\r\n            console.error('No se puede guardar un ganador porque no se ha seleccionado uno.');\r\n            return;\r\n        }\r\n    \r\n        // Guarda el ganador en los resultados\r\n        this.results.push(this.winner);\r\n    \r\n        // Elimina al participante seleccionado\r\n        this.sorteos[this.empresaSorteando].participantes.splice(this.winnerIndex, 1);\r\n    \r\n        // Elimina el premio asignado\r\n        this.sorteos[this.empresaSorteando].premios.shift();\r\n    \r\n        // Limpia los datos temporales del ganador\r\n        this.showParticipante = \"\";\r\n        this.winner = null;\r\n    \r\n        console.log(`Resultado guardado: ${JSON.stringify(this.results[this.results.length - 1])}`);\r\n    }\r\n    \r\n    resetearSorteo(){\r\n        this.results = [];\r\n        this.winner = null;\r\n        this.sorteando = false;\r\n        this.sorteoHasStarted = false;\r\n        this.setDefaultIntervalValues();\r\n        this.indexPremio = 0;\r\n        this.empresaSorteando = \"wen\";\r\n    }\r\n\r\n}\r\n\r\nexport interface Sorteos {\r\n    wen: Sorteo\r\n}\r\n\r\nexport interface Sorteo {\r\n    participantes: string[],\r\n    premios: string[]\r\n}\r\n\r\nexport interface Premio {\r\n    nombre: string;\r\n    cantidad: number;\r\n}\r\n\r\nexport class ConfiguracionRuleta {\r\n    intervalSpin: any;\r\n    microSeg: number = 50;\r\n    microSeg_agregar: number = 50;\r\n    microSeg_suspenso: number = 85;\r\n    intervalInstance: number = 1;\r\n    repetir_N_veces: number = 9;\r\n    restarRepeticiones: number = 9;\r\n    restarRepeticiones_suspenso: number = 3;\r\n}\r\n\r\n// 1ra iteración:\r\n// microSeg: number = 100;\r\n// microSeg_agregar: number = 50;\r\n// microSeg_suspenso: number = 100;\r\n// repetir_N_veces: number = 18;\r\n// restarRepeticiones: number = 6;\r\n// restarRepeticiones_suspenso: number = 2;","<div id=\"sorteoContainer\" class=\"fullWidth fullHeight\">\r\n\r\n  @if (status.finish) {\r\n    <div class=\"finDeSorteo\">\r\n      <br>\r\n      <img class=\"svgIcon\" src=\"assets/icons/tecnovoz_logo.png\" alt=\"Logo\">\r\n    </div>\r\n  }\r\n\r\n  @if (!status.finish) {\r\n    \r\n    <div id=\"buttons\">\r\n      @if (!disableShuffleBtn()) {\r\n        <div id=\"leftContainer\" (click)=\"generateWinner()\" class=\"clickableContainer\">\r\n          <button mat-fab [ngClass]=\"{'shuffleBtn': !disableShuffleBtn()}\">\r\n            <mat-icon>timer</mat-icon>\r\n          </button>\r\n          <h1>Iniciar</h1>\r\n          <!-- <button mat-fab [ngClass]=\"{'okBtn': !disableOkBtn()}\" (click)=\"saveResult()\" [disabled]=\"disableOkBtn()\">\r\n            <mat-icon>done</mat-icon>\r\n          </button> -->\r\n        </div>\r\n      }\r\n    </div>\r\n    <br>\r\n    <br>\r\n    <br>\r\n    <div id=\"randomGeneratorStrings\">\r\n      <span [ngClass]=\"{'darkBlue': !sorteando, 'clearBlue': sorteando}\" class=\"animate numberFormat\">\r\n        {{ countDown }}\r\n      </span>\r\n    </div>\r\n  }\r\n\r\n\r\n  @if (status.finish) {\r\n    <div id=\"tablaResultadosContainer\" class=\"twoColumns\">\r\n      <app-resultados \r\n        classEmpresa=\"svgIcon\"\r\n        sgvIconEmpresa=\"wenGrisOscuro\"\r\n        [results]=\"wenResults\" \r\n        columnaDerecha=\"Ganador\" \r\n        class=\"fullWidth\">\r\n      </app-resultados>\r\n      <div class=\"sorteoSeparator\"></div>\r\n    </div>\r\n  }\r\n  \r\n</div>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { SlotsSorteo2023Component, Sorteos } from './slots-sorteo2023/slots-sorteo2023.component';\r\nimport { CargaListadoComponent } from './carga-listado/carga-listado.component';\r\n\r\n@Component({\r\n  selector: 'app-version2023',\r\n  templateUrl: './version2023.component.html',\r\n  styleUrls: ['./version2023.component.scss']\r\n})\r\nexport class Version2023Component implements OnInit {\r\n  @Input() status!: { start: boolean, finish: boolean };\r\n\r\n  @ViewChild('listadoswen') listadoswen!: CargaListadoComponent;\r\n  @ViewChild('slotsSorteo') slotsSorteo!: SlotsSorteo2023Component;\r\n\r\n  initValue: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  resetearSorteo() {\r\n    this.listadoswen.resetearSorteo();\r\n    this.slotsSorteo.resetearSorteo();\r\n    this.initValue = false;\r\n  }\r\n\r\n  disableStart() {\r\n    return (!this.listadoswen || this.listadoswen.isInvalid());\r\n  }\r\n\r\n  comenzarSorteo() {\r\n    let sorteos: Sorteos = {\r\n      wen: this.listadoswen.getListados()\r\n    }\r\n    this.slotsSorteo.startSorteo(sorteos);\r\n  }\r\n}\r\n","<div id=\"initContainer\" [ngClass]=\"{'hidden': status.start}\">\r\n    <div id=\"initContainer\" [ngClass]=\"{'hidden': status.start}\">\r\n        <div id=\"empresasContainer\">\r\n            <div class=\"sorteoContainer\">\r\n                <h1 style=\"text-align: center;\">\r\n                    <img class=\"svgIcon\" src=\"assets/icons/tecnovoz_logo.png\" alt=\"Logo\">\r\n                </h1>\r\n                <app-carga-listado #listadoswen class=\"fullWidth\"></app-carga-listado>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <div id=\"actionsContainer\" [ngClass]=\"{'hidden': status.start}\">\r\n        <button mat-raised-button class=\"okBtn\" [disabled]=\"disableStart()\" (click)=\"comenzarSorteo()\">PREPARAR SORTEO</button>\r\n    </div>\r\n</div>\r\n\r\n<app-slots-sorteo2023 #slotsSorteo class=\"widthSlots\" [ngClass]=\"{'hidden': !status.start}\" [status]=\"status\"></app-slots-sorteo2023>","import { Injectable } from '@angular/core';\r\nimport { MatIconRegistry } from \"@angular/material/icon\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SvgService {\r\n\r\n  constructor(\r\n    private matIconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer\r\n  ) { }\r\n   init() {\r\n    this.matIconRegistry.addSvgIcon(\r\n      \"novitLogo\",\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\"assets/icons/tecnovoz_logo.png\")\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      \"novitLogoBlanco\",\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\"assets/icons/logo-blanco.svg\")\r\n    );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["i0","ɵɵelementStart","ɵɵlistener","AppComponent_Conditional_3_Template_mat_button_toggle_group_change_0_listener","ɵɵrestoreView","_r2","toggleGroup_r3","ɵɵreference","ctx_r3","ɵɵnextContext","ɵɵresetView","changeVersionDisplaying","value","ɵɵtext","ɵɵelementEnd","ɵɵproperty","displayVersion","ɵɵadvance","version","_2023","Version","AppComponent","constructor","svgService","showVersionControl","status","start","finish","init","resetearSorteo","version2023","headBar","ɵɵdirectiveInject","i1","SvgService","selectors","viewQuery","AppComponent_Query","rf","ctx","AppComponent_Template_app_head_bar_fireResetearSorteo_1_listener","_r1","ɵɵtemplate","AppComponent_Conditional_3_Template","ɵɵelement","ɵɵconditional","BrowserModule","MatIconModule","HttpClientModule","FormsModule","ReactiveFormsModule","BrowserAnimationsModule","MatButtonModule","MatInputModule","MatButtonToggleModule","MatSnackBarModule","MatTooltipModule","ResultadosComponent","HeadBarComponent","Version2023Component","CargaListadoComponent","SlotsSorteo2023Component","AvisoSnackComponent","AppModule","bootstrap","imports","declarations","MatButtonToggleGroup","MatButtonToggle","MAT_SNACK_BAR_DATA","snackBarRef","data","ngOnInit","dismiss","MatSnackBarRef","decls","vars","consts","template","AvisoSnackComponent_Template","AvisoSnackComponent_Template_div_click_0_listener","ɵɵclassMap","type","ɵɵtextInterpolate","title","text","AvisoSnackService","_snackBar","displayMsg","openFromComponent","horizontalPosition","verticalPosition","ɵɵinject","MatSnackBar","factory","ɵfac","providedIn","EventEmitter","fireResetearSorteo","currentYear","Date","getFullYear","force","emit","getVersion","inputs","outputs","HeadBarComponent_Template","HeadBarComponent_Template_h1_click_1_listener","ɵɵpureFunction1","_c0","ɵɵtextInterpolate1","trigger","style","transition","animate","keyframes","confetti","undefined","result_r1","premio","texto","cdr","classEmpresa","sgvIconEmpresa","visibleResults","scrollToBottom","setTimeout","appContainer","document","querySelector","scrollContainer","resultadosContainer","nativeElement","scrollTop","scrollHeight","showResults","_this","_asyncToGenerator","i","results","length","push","detectChanges","Promise","resolve","showConfetti","animateWinners","particleCount","spread","origin","y","elements","querySelectorAll","forEach","element","classList","add","ChangeDetectorRef","ResultadosComponent_Query","ɵɵrepeaterCreate","ResultadosComponent_For_11_Template","ɵɵrepeaterTrackByIdentity","_c1","columnaDerecha","ɵɵpropertyInterpolate","ɵɵrepeater","transform","offset","opacity","_","participante_r3","CargaListadoComponent_Conditional_16_For_2_Template","participantes","premio_r6","nombre","cantidad","CargaListadoComponent_Conditional_27_For_8_Template","premios","_avisoSnackService","participantesOriginal","cantidadTotalPremios","fireStartSorteo","cargarArchivo","event","tipo","target","files","file","fileReader","FileReader","output","self","onload","e","lines","result","split","toString","trim","cargarParticipantes","cargarPremios","readAsText","lowerCase","map","x","toLowerCase","filter","index","indexOf","error","pair","validarPremios","parseInt","isNaN","masPremiosQueParticipantes","isInvalid","getListados","Array","fill","CargaListadoComponent_Template","CargaListadoComponent_Template_input_change_1_listener","$event","CargaListadoComponent_Template_input_change_3_listener","CargaListadoComponent_Template_button_click_11_listener","inputParticipantes_r2","click","CargaListadoComponent_Conditional_16_Template","CargaListadoComponent_Template_button_click_22_listener","inputPremios_r5","CargaListadoComponent_Conditional_26_Template","CargaListadoComponent_Conditional_27_Template","UntypedFormControl","UntypedFormGroup","Validators","SlotsSorteo2023Component_Conditional_2_Conditional_1_Template_div_click_0_listener","ctx_r1","generateWinner","disableShuffleBtn","SlotsSorteo2023Component_Conditional_2_Conditional_1_Template","ɵɵpureFunction2","sorteando","countDown","wenResults","renderer","el","empresaSorteando","indexPremio","sorteoHasStarted","showParticipante","winnerIndex","winner","config","ConfiguracionRuleta","TESTEANDO_RULETA","TESTEO_CONFIG","microSeg","required","microSeg_agregar","microSeg_suspenso","repetir_N_veces","restarRepeticiones","restarRepeticiones_suspenso","startSorteo","sorteos","setDefaultIntervalValues","disableOkBtn","configureTestInterval","test","getRawValue","empresa","runProcess","_this2","countDownElement","intervalPromise","generateInterval","countdownPromise","runCountdown","all","console","log","_this3","removeClass","offsetWidth","addClass","_this4","empresas","posibleWinnerIndex","Math","floor","random","setWinner","saveResult","splice","shift","JSON","stringify","Renderer2","ElementRef","SlotsSorteo2023Component_Template","SlotsSorteo2023Component_Conditional_1_Template","SlotsSorteo2023Component_Conditional_2_Template","SlotsSorteo2023Component_Conditional_3_Template","intervalInstance","initValue","listadoswen","slotsSorteo","disableStart","comenzarSorteo","wen","Version2023Component_Query","Version2023Component_Template_button_click_9_listener","_c2","matIconRegistry","domSanitizer","addSvgIcon","bypassSecurityTrustResourceUrl","MatIconRegistry","i2","DomSanitizer","environment","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}